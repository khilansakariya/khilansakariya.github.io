{"version":3,"file":"component---src-pages-archive-js-643392db8de481989a85.js","mappings":"sMAUQA,EAA6BC,EAAAA,GAA7BD,OAAQE,EAAqBD,EAAAA,GAArBC,MAAOC,EAAcF,EAAAA,GAAdE,UAEjBC,GAAsBC,EAAAA,EAAAA,SAAOC,EAAAA,IAAKC,WAAA,CAAAC,YAAA,+BAAAC,YAAA,eAAZJ,CAAY,MAClCK,EAAuBL,EAAAA,QAAOM,IAAGJ,WAAA,CAAAC,YAAA,gCAAAC,YAAA,eAAVJ,CAAU,4BAEnCO,EAAAA,GAAMC,OAAMC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uCAIVC,EAAcX,EAAAA,QAAOY,MAAKV,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAZJ,CAAY,miBAK1BO,EAAAA,GAAMC,OAAMK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,oCAMAd,EAAAA,GAAMkB,WAIEnB,EAAOoB,UAQ3BR,EAAAA,GAAMC,OAAMQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,oCAUVH,EAAAA,GAAMC,OAAMS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,wCACCZ,EAAUoB,IAKhBvB,EAAOwB,cACHrB,EAAUsB,GAMVtB,EAAUuB,GAGVvB,EAAUwB,GACRzB,EAAM0B,OAafC,EAAAA,GAAOC,YAiHnB,UAnGoB,SAAHC,GAA4B,IAAtBC,EAAQD,EAARC,SACfC,EAD6BF,EAAJG,KACTC,kBAAkBC,MAElCC,GAAcC,EAAAA,EAAAA,QAAO,MACrBC,GAAcD,EAAAA,EAAAA,QAAO,MACrBE,GAAiBF,EAAAA,EAAAA,QAAO,IAO9B,OANAG,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAGC,OAAON,EAAYO,SAASC,EAAAA,EAAAA,aAC/BH,EAAAA,EAAGC,OAAOJ,EAAYK,SAASC,EAAAA,EAAAA,aAC/BL,EAAeI,QAAQE,SAAQ,SAACC,EAAKC,GAAC,OAAKN,EAAAA,EAAGC,OAAOI,GAAKF,EAAAA,EAAAA,UAAa,GAAJG,GAAQ,GAC7E,GAAG,IAGDC,EAAAA,cAACC,EAAAA,GAAM,CAAClB,SAAUA,GAChBiB,EAAAA,cAACE,EAAAA,EAAM,KACLF,EAAAA,cAAA,aAAO,6BACPA,EAAAA,cAAA,QAAMG,IAAI,YAAYC,KAAK,sDAG7BJ,EAAAA,cAAC7C,EAAmB,KAClB6C,EAAAA,cAAA,UAAQF,IAAKV,GACXY,EAAAA,cAAA,MAAIK,UAAU,aAAY,WAC1BL,EAAAA,cAAA,KAAGK,UAAU,YAAW,wCAG1BL,EAAAA,cAACvC,EAAoB,CAACqC,IAAKR,GACzBU,EAAAA,cAACjC,EAAW,KACViC,EAAAA,cAAA,aACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,UACJA,EAAAA,cAAA,UAAI,SACJA,EAAAA,cAAA,MAAIK,UAAU,kBAAiB,WAC/BL,EAAAA,cAAA,MAAIK,UAAU,kBAAiB,UAC/BL,EAAAA,cAAA,UAAI,UAGRA,EAAAA,cAAA,aACGhB,EAASsB,OAAS,GACjBtB,EAASuB,KAAI,SAAAC,EAAWT,GAAO,IAAfU,EAAID,EAAJC,KACRC,EAAYX,EAAI,EACtBY,EAAmDF,EAAKG,YAAhDC,EAAMF,EAANE,OAAQC,EAAQH,EAARG,SAAUC,EAAKJ,EAALI,MAAOC,EAAIL,EAAJK,KAAMC,EAAON,EAAPM,QACvC,OACEjB,EAAAA,cAAA,MAAIkB,IAAKnB,EAAGD,IAAK,SAAAqB,GAAE,OAAK5B,EAAeI,QAAQI,GAAKoB,CAAE,GACpDnB,EAAAA,cAAA,MAAIK,UAAU,SAASK,GAEvBV,EAAAA,cAAA,MAAIK,UAAU,SAASU,GAEvBf,EAAAA,cAAA,MAAIK,UAAU,0BACXY,EAAUjB,EAAAA,cAAA,YAAOiB,GAAkBjB,EAAAA,cAAA,YAAM,MAG5CA,EAAAA,cAAA,MAAIK,UAAU,uBACXW,EAAKV,OAAS,GACbU,EAAKT,KAAI,SAACa,EAAMrB,GAAC,OACfC,EAAAA,cAAA,QAAMkB,IAAKnB,GACRqB,EACA,GACArB,IAAMiB,EAAKV,OAAS,GAAKN,EAAAA,cAAA,QAAMK,UAAU,aAAY,KACjD,KAIbL,EAAAA,cAAA,MAAIK,UAAU,SACZL,EAAAA,cAAA,YACGc,GACCd,EAAAA,cAAA,KACEI,KAAMU,EACNO,OAAO,SACPlB,IAAI,+BACJ,aAAW,iBACXH,EAAAA,cAACsB,EAAAA,GAAa,CAACC,KAAK,cAGvBV,GACCb,EAAAA,cAAA,KACEI,KAAMS,EACNQ,OAAO,SACPlB,IAAI,+BACJ,aAAW,eACXH,EAAAA,cAACsB,EAAAA,GAAa,CAACC,KAAK,cAOlC,QAOhB,C","sources":["webpack://v1/./src/pages/archive.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { graphql } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport sr from '@utils/sr';\nimport { srConfig } from '@config';\nimport { Layout } from '@components';\nimport { FormattedIcon } from '@components/icons';\nimport styled from 'styled-components';\nimport { theme, mixins, media, Main } from '@styles';\nconst { colors, fonts, fontSizes } = theme;\n\nconst StyledMainContainer = styled(Main)``;\nconst StyledTableContainer = styled.div`\n  margin: 100px -20px;\n  ${media.tablet`\n    margin: 100px -10px;\n  `};\n`;\nconst StyledTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n\n  .hide-on-mobile {\n    ${media.tablet`\n      display: none;\n    `};\n  }\n\n  tbody tr {\n    transition: ${theme.transition};\n\n    &:hover,\n    &:focus {\n      background-color: ${colors.lightNavy};\n    }\n  }\n  th,\n  td {\n    cursor: default;\n    line-height: 1.5;\n    padding: 10px 20px;\n    ${media.tablet`\n      padding: 10px;\n    `};\n  }\n  th {\n    text-align: left;\n  }\n  td {\n    &.number {\n      width: 10%;\n      ${media.tablet`\n        font-size: ${fontSizes.sm};\n      `};\n    }\n    &.title {\n      padding-top: 15px;\n      color: ${colors.lightestSlate};\n      font-size: ${fontSizes.xl};\n      font-weight: 700;\n    }\n    &.company {\n      width: 15%;\n      padding-top: 15px;\n      font-size: ${fontSizes.lg};\n    }\n    &.tech {\n      font-size: ${fontSizes.xs};\n      font-family: ${fonts.SFMono};\n      .separator {\n        margin: 0 5px;\n      }\n      span {\n        display: inline-block;\n      }\n    }\n    &.links {\n      span {\n        display: flex;\n        align-items: center;\n        a {\n          ${mixins.flexCenter};\n        }\n        a + a {\n          margin-left: 10px;\n        }\n        svg {\n          width: 20px;\n          height: 20px;\n        }\n      }\n    }\n  }\n`;\n\nconst ArchivePage = ({ location, data }) => {\n  const projects = data.allMarkdownRemark.edges;\n\n  const revealTitle = useRef(null);\n  const revealTable = useRef(null);\n  const revealProjects = useRef([]);\n  useEffect(() => {\n    sr.reveal(revealTitle.current, srConfig());\n    sr.reveal(revealTable.current, srConfig());\n    revealProjects.current.forEach((ref, i) => sr.reveal(ref, srConfig(i * 10)));\n  }, []);\n\n  return (\n    <Layout location={location}>\n      <Helmet>\n        <title>Archive | Khilan Sakariya</title>\n        <link rel=\"canonical\" href=\"https://https://khilansakariya.github.io/archive\" />\n      </Helmet>\n\n      <StyledMainContainer>\n        <header ref={revealTitle}>\n          <h1 className=\"big-title\">Archive</h1>\n          <p className=\"subtitle\">A big list of things I’ve worked on</p>\n        </header>\n\n        <StyledTableContainer ref={revealTable}>\n          <StyledTable>\n            <thead>\n              <tr>\n                <th>Number</th>\n                <th>Title</th>\n                <th className=\"hide-on-mobile\">Company</th>\n                <th className=\"hide-on-mobile\">Domain</th>\n                <th>Link</th>\n              </tr>\n            </thead>\n            <tbody>\n              {projects.length > 0 &&\n                projects.map(({ node }, i) => {\n                  const rowNumber = i + 1;\n                  const { github, external, title, tech, company } = node.frontmatter;\n                  return (\n                    <tr key={i} ref={el => (revealProjects.current[i] = el)}>\n                      <td className=\"title\">{rowNumber}</td>\n\n                      <td className=\"title\">{title}</td>\n\n                      <td className=\"company hide-on-mobile\">\n                        {company ? <span>{company}</span> : <span>—</span>}\n                      </td>\n\n                      <td className=\"tech hide-on-mobile\">\n                        {tech.length > 0 &&\n                          tech.map((item, i) => (\n                            <span key={i}>\n                              {item}\n                              {''}\n                              {i !== tech.length - 1 && <span className=\"separator\">&middot;</span>}\n                            </span>\n                          ))}\n                      </td>\n\n                      <td className=\"links\">\n                        <span>\n                          {external && (\n                            <a\n                              href={external}\n                              target=\"_blank\"\n                              rel=\"nofollow noopener noreferrer\"\n                              aria-label=\"External Link\">\n                              <FormattedIcon name=\"External\" />\n                            </a>\n                          )}\n                          {github && (\n                            <a\n                              href={github}\n                              target=\"_blank\"\n                              rel=\"nofollow noopener noreferrer\"\n                              aria-label=\"GitHub Link\">\n                              <FormattedIcon name=\"GitHub\" />\n                            </a>\n                          )}\n                        </span>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </StyledTable>\n        </StyledTableContainer>\n      </StyledMainContainer>\n    </Layout>\n  );\n};\nArchivePage.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default ArchivePage;\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/projects/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date\n            title\n            tech\n            github\n            external\n            company\n          }\n          html\n        }\n      }\n    }\n  }\n`;\n"],"names":["colors","theme","fonts","fontSizes","StyledMainContainer","styled","Main","withConfig","displayName","componentId","StyledTableContainer","div","media","tablet","_templateObject","_taggedTemplateLiteralLoose","StyledTable","table","_templateObject2","transition","lightNavy","_templateObject3","_templateObject4","sm","lightestSlate","xl","lg","xs","SFMono","mixins","flexCenter","_ref","location","projects","data","allMarkdownRemark","edges","revealTitle","useRef","revealTable","revealProjects","useEffect","sr","reveal","current","srConfig","forEach","ref","i","React","Layout","Helmet","rel","href","className","length","map","_ref2","node","rowNumber","_node$frontmatter","frontmatter","github","external","title","tech","company","key","el","item","target","FormattedIcon","name"],"sourceRoot":""}